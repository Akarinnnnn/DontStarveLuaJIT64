using System.Text;

namespace FunctionListGen;

public class EmitTrunk : IEntryVisitor, IEmitter
{
	private readonly List<ExportItem> exports;

	public EmitTrunk()
	{
		exports = new List<ExportItem>();
	}


	public void Visit(ExportItem item)
	{
		exports.Add(item);
	}
	
	public void Emit(string outDir)
	{
		var file = new FileStream(Path.Combine(outDir, "trunks.asm"), FileMode.Create);
		using StreamWriter writer = new(file, Encoding.ASCII);
		
		// prolog

		writer.WriteLine($"; <auto-generated> {DateTime.Now:yyyy.MM.dd HH.mm.ss}");
		writer.WriteLine("""
			.CODE
			extrn jmptable:QWORD
			""");

		foreach (var export in exports)
		{
			writer.WriteLine($"trunk{export.Ordinal} proc public");
			// writer.WriteLine("mov rax, funclist");
			writer.WriteLine($"jmp qword ptr [jmptable + 8*{export.Ordinal}]");
			writer.WriteLine($"trunk{export.Ordinal} endp");
		}

		// epilog
		writer.WriteLine("""
			END
			""");
	}
}
